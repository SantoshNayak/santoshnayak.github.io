{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/token-interceptor.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/auth.service.ts","./src/app/services/loader-interceptor.service.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n   apiUrl:\"http://ec2-13-234-238-28.ap-south-1.compute.amazonaws.com:3001/\",\n   \n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpInterceptor } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor{\n\n  \n\n\n  constructor() { }\n\n  intercept(req, next){\n    const token = localStorage.getItem('token');\n\n    console.log('ttttttttt',token);\n    \n    let tokenizedReq = req.clone({\n      setHeaders:{\n        Authorization: 'Bearer ' + token\n      }\n    })\n\n    return next.handle(tokenizedReq)\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'botb-admin';\n}\n","<div class=\"w-100\" >\n  <router-outlet></router-outlet>\n  <ngx-ui-loader  fgsType=\"three-bounce\"></ngx-ui-loader>\n</div>","import { LoaderInterceptor } from './services/loader-interceptor.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { ToastrModule } from 'ngx-toastr';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptorService } from './services/token-interceptor.service';\nimport { NgxUiLoaderModule } from 'ngx-ui-loader';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ToastrModule.forRoot(), // ToastrModule added\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    NgxUiLoaderModule,\n   \n\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptorService, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true },\n\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { \n  constructor(){\n    console.log('app module loaded');\n    \n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  url =  environment.apiUrl;\n\n  constructor(\n    private http:HttpClient,\n    private _router: Router) { }\n\n\n  \n  login(loginmodel):Observable<any>{\n    return this.http.post(this.url+'auth/admin-login',loginmodel) .pipe(\n      map(user => {           \n\n        console.log(`login user is `,user);        \n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n         localStorage.setItem('token',  user[\"token\"].toString());\n        //  localStorage.setItem('id',  user[\"data\"].id.toString());\n        //  localStorage.setItem('judgename',  user[\"data\"].name.toString());\n\n\n        return user;\n\n\n      })\n    );\n  }\n\n  logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('token');\n    localStorage.removeItem('id');\n    localStorage.removeItem('judgename');\n    this._router.navigate(['/login']);\n}\n}\n","// loader-interceptor.service.ts\nimport { Injectable } from '@angular/core';\nimport {\n  HttpResponse,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { finalize, catchError } from 'rxjs/operators';\nimport { ToastrService } from \"ngx-toastr\";\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n  private requests: HttpRequest<any>[] = [];\n\n  constructor(public uiLoader: NgxUiLoaderService, public toast: ToastrService) { }\n\n \n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n\n    this.uiLoader.start();\n    if (navigator.onLine) {\n      return next.handle(req)\n        .pipe(finalize(() => {\n          this.uiLoader.stop();\n        }))\n        .pipe(catchError(err => {\n          if (err.error.statusCode === 400) {\n            this.toast.error('Something Went Wrong!');\n          }\n          if (err.error.statusCode === 500) {\n\n            this.toast.error(err.error.message);\n          }\n          if (err.error.status === 401 || err.error.status) {\n\n             this.toast.error(err.error.message);\n          }\n\n\n          return throwError(err.error);\n        }\n        ));\n    } else {\n      this.toast.error('Please Check your Network Connection');\n    }\n    return undefined;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuard } from './_guards/auth.guard';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: '/login' },\n  {\n    path: 'dashboard',\n    loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule) ,\n    //  canActivate:[AuthGuard],\n  },\n    \n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrModule, ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  email = new FormControl('', [Validators.required, Validators.email]);\n\n  loginModel = {\n    \"email\":'botb@gmail.com',\n    \"password\":\"12345\"\n}\n\nhide = true;\ngetErrorMessage() {\n  return this.email.hasError('required') ? 'You must enter a value' :\n    this.email.hasError('email') ? 'Not a valid email' :\n      '';\n}\n  constructor(private auth:AuthService, private router:Router , private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  login(){\n    console.log('login model is',this.loginModel);\n    this.auth.login(this.loginModel).subscribe((data)=>{\n      console.log(data);\n      this.router.navigateByUrl('/dashboard');\n      let judgeName = localStorage.getItem('judgename')\n      // this.toastr.success('Welcome Mr. '+judgeName);\n      \n    },(error)=>{\n      console.log(error);\n      this.toastr.error(error.error);\n      \n    })\n    \n  }\n}\n","<div class=\"limiter\">\n    <div class=\"container-login100\">\n      <div class=\"wrap-login100\">\n        <div class=\"login100-pic js-tilt\" data-tilt=\"\"\n             style=\"transform: perspective(300px) rotateX(0deg) rotateY(0deg); will-change: transform;\">\n          <img src=\"../../assets/svg/Admin-amico.svg\" alt=\"IMG\">\n\n        </div>\n  \n        <div class=\"example-container login100-form validate-form\">\n                  <span class=\"login100-form-title\">\n                      Admin Login\n                  </span>\n          <div class=\"example-container\">\n            <img src=\"../../assets/images/contactme.png\" alt=\"\">\n            <mat-form-field >\n              <input matInput placeholder=\"Enter your email\" required\n                     [(ngModel)]=\"loginModel.email\" >\n              <span matPrefix>\n                              <i class=\"material-icons inputFieldIcon vertical-align\">email</i>\n                          </span>\n              <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>\n            </mat-form-field>\n            <mat-form-field>\n              <input matInput placeholder=\"Enter your password\" [type]=\"hide ? 'password' : 'text'\"\n                     [(ngModel)]=\"loginModel.password\">\n              <span matPrefix>\n                              <i class=\"material-icons inputFieldIcon vertical-align\">lock</i>\n                          </span>\n              <!-- <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                      [attr.aria-pressed]=\"hide\">\n                <mat-icon class=\"inputFieldIcon\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n              </button> -->\n            </mat-form-field>\n  \n          </div>\n  \n          <div class=\"container-login100-form-btn\">\n            <a class=\"txt2 atagwidth\">\n              <button mat-raised-button color=\"primary\" class=\"login100-form-btn\" (click)=\"login()\">Login</button>\n            </a>\n          </div>\n  \n          <div class=\"text-center p-t-12\">\n                      <span class=\"txt1\">\n                          Forgot\n                      </span>\n            <a class=\"txt2\" href=\"/forgetpassword\">\n              Username / Password?\n            </a>\n          </div>\n  \n          <div class=\"text-center p-t-136\">\n            <a class=\"txt2\" href=\"/register\" style=\"display: none\">\n              Create your Account\n              <i class=\"material-icons m-l-5 vertical-align\">arrow_right_alt</i>\n            </a>\n\n            \n          </div>\n  \n        </div>\n  \n      </div>\n    </div>\n  </div>\n  ","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}